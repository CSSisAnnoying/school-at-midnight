{"ast":null,"code":"import React,{useEffect,useRef}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";const createSpan=digit=>{return/*#__PURE__*/_jsx(\"span\",{children:digit},digit);};const AnimatedDigit=_ref=>{let{targetDigit}=_ref;const previousDigit=useRef(null);const nineToZero=previousDigit.current===9&&targetDigit===0;const zeroToNine=previousDigit.current===0&&targetDigit===9;const neither=!nineToZero&&!zeroToNine;let allDigits=[];for(let i=0;i<10;i++){allDigits.push(createSpan(i));}if(nineToZero){allDigits=[...allDigits.slice(1),createSpan(0)];}else if(zeroToNine){allDigits=[createSpan(0),...allDigits.slice(1)];}useEffect(()=>{previousDigit.current=targetDigit;},[targetDigit]);const getTransformValue=()=>{if(neither){return`translateY(${targetDigit*-100}%)`;}else if(nineToZero){return`translateY(-110%)`;}else if(zeroToNine){return`translateY(-110%)`;}};return/*#__PURE__*/_jsx(\"div\",{className:\"animated-digit\",style:{transform:getTransformValue()},children:allDigits});};export default AnimatedDigit;","map":{"version":3,"names":["React","useEffect","useRef","jsx","_jsx","createSpan","digit","children","AnimatedDigit","_ref","targetDigit","previousDigit","nineToZero","current","zeroToNine","neither","allDigits","i","push","slice","getTransformValue","className","style","transform"],"sources":["C:/Users/jamil/Documents/Untitled Documents/DarkModeClassroom/popup/src/Components/Counter/AnimatedDigit.tsx"],"sourcesContent":["import React, { ReactElement, useEffect, useRef } from \"react\";\r\n\r\ntype PropTypes = {\r\n    targetDigit: number;\r\n}\r\n\r\nconst createSpan = (digit: number) => {\r\n    return <span key={digit}>{digit}</span>;\r\n}\r\n\r\nconst AnimatedDigit = ({ targetDigit }: PropTypes) => {\r\n    const previousDigit: { current: null | number } = useRef(null);\r\n\r\n    const nineToZero = (previousDigit.current === 9 && targetDigit === 0);\r\n    const zeroToNine = (previousDigit.current === 0 && targetDigit === 9);\r\n    const neither = (!nineToZero && !zeroToNine);\r\n\r\n    let allDigits: ReactElement[] = [];\r\n    for (let i = 0; i < 10; i++) {\r\n        allDigits.push(createSpan(i));\r\n    }\r\n\r\n    if (nineToZero) {\r\n        allDigits = [...allDigits.slice(1), createSpan(0)];\r\n    } else if (zeroToNine) {\r\n        allDigits = [createSpan(0), ...allDigits.slice(1)];\r\n    }\r\n\r\n    useEffect(() => {\r\n        previousDigit.current = targetDigit;\r\n    }, [targetDigit]);\r\n\r\n    const getTransformValue = () => {\r\n        if (neither) {\r\n            return `translateY(${targetDigit * -100}%)`;\r\n        } else if (nineToZero) {\r\n            return `translateY(-110%)`;\r\n        } else if (zeroToNine) {\r\n            return `translateY(-110%)`;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"animated-digit\" style={{ transform: getTransformValue() }}>\r\n            {allDigits}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AnimatedDigit;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAkBC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAM/D,KAAM,CAAAC,UAAU,CAAIC,KAAa,EAAK,CAClC,mBAAOF,IAAA,SAAAG,QAAA,CAAmBD,KAAK,EAAbA,KAAoB,CAAC,CAC3C,CAAC,CAED,KAAM,CAAAE,aAAa,CAAGC,IAAA,EAAgC,IAA/B,CAAEC,WAAuB,CAAC,CAAAD,IAAA,CAC7C,KAAM,CAAAE,aAAyC,CAAGT,MAAM,CAAC,IAAI,CAAC,CAE9D,KAAM,CAAAU,UAAU,CAAID,aAAa,CAACE,OAAO,GAAK,CAAC,EAAIH,WAAW,GAAK,CAAE,CACrE,KAAM,CAAAI,UAAU,CAAIH,aAAa,CAACE,OAAO,GAAK,CAAC,EAAIH,WAAW,GAAK,CAAE,CACrE,KAAM,CAAAK,OAAO,CAAI,CAACH,UAAU,EAAI,CAACE,UAAW,CAE5C,GAAI,CAAAE,SAAyB,CAAG,EAAE,CAClC,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAG,EAAE,CAAEA,CAAC,EAAE,CAAE,CACzBD,SAAS,CAACE,IAAI,CAACb,UAAU,CAACY,CAAC,CAAC,CAAC,CACjC,CAEA,GAAIL,UAAU,CAAE,CACZI,SAAS,CAAG,CAAC,GAAGA,SAAS,CAACG,KAAK,CAAC,CAAC,CAAC,CAAEd,UAAU,CAAC,CAAC,CAAC,CAAC,CACtD,CAAC,IAAM,IAAIS,UAAU,CAAE,CACnBE,SAAS,CAAG,CAACX,UAAU,CAAC,CAAC,CAAC,CAAE,GAAGW,SAAS,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC,CACtD,CAEAlB,SAAS,CAAC,IAAM,CACZU,aAAa,CAACE,OAAO,CAAGH,WAAW,CACvC,CAAC,CAAE,CAACA,WAAW,CAAC,CAAC,CAEjB,KAAM,CAAAU,iBAAiB,CAAGA,CAAA,GAAM,CAC5B,GAAIL,OAAO,CAAE,CACT,MAAO,cAAcL,WAAW,CAAG,CAAC,GAAG,IAAI,CAC/C,CAAC,IAAM,IAAIE,UAAU,CAAE,CACnB,MAAO,mBAAmB,CAC9B,CAAC,IAAM,IAAIE,UAAU,CAAE,CACnB,MAAO,mBAAmB,CAC9B,CACJ,CAAC,CAED,mBACIV,IAAA,QAAKiB,SAAS,CAAC,gBAAgB,CAACC,KAAK,CAAE,CAAEC,SAAS,CAAEH,iBAAiB,CAAC,CAAE,CAAE,CAAAb,QAAA,CACrES,SAAS,CACT,CAAC,CAEd,CAAC,CAED,cAAe,CAAAR,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}